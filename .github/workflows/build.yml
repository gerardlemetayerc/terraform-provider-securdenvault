name: Build and Package

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.20.0

    - name: Extract tag name
      run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

    - name: Extract version from tag
      id: get_version
      run: echo "::set-output name=version::${GITHUB_REF#refs/tags/v}"

    - name: Build binaries and package
      env:
        VERSION: ${{ steps.get_version.outputs.version }} # Utilisez le run_id comme version pour cet exemple
      run: |
        version=$VERSION
        echo "Building version $version"
        mkdir build
        echo "---- Building binaries"
        env GOOS=linux GOARCH=amd64 go build -o "build/terraform-provider-device42_${version}_linux_amd64"
        chmod +x "build/terraform-provider-device42_${version}_linux_amd64"
        env GOOS=linux GOARCH=386 go build -o "build/terraform-provider-device42_${version}_linux_386"
        chmod +x "build/terraform-provider-device42_${version}_linux_386"
        env GOOS=windows GOARCH=amd64 go build -o "build/terraform-provider-device42_${version}_windows_amd64.exe"
        env GOOS=windows GOARCH=386 go build -o "build/terraform-provider-device42_${version}_windows_386.exe"

        echo "---- ZIP directory folders"
        cd build
        zip "terraform-provider-device42_${version}_linux_amd64.zip" "terraform-provider-device42_${version}_linux_amd64"
        rm -f "terraform-provider-device42_${version}_linux_amd64"
        zip "terraform-provider-device42_${version}_linux_386.zip" "terraform-provider-device42_${version}_linux_386"
        rm -f "terraform-provider-device42_${version}_linux_386"
        zip "terraform-provider-device42_${version}_windows_amd64.zip" "terraform-provider-device42_${version}_windows_amd64.exe"
        rm -f "terraform-provider-device42_${version}_windows_amd64.exe"
        zip "terraform-provider-device42_${version}_windows_386.zip" "terraform-provider-device42_${version}_windows_386.exe"
        rm "terraform-provider-device42_${version}_windows_386.exe"

    - name: Install Hub
      run: |
        sudo apt-get update
        sudo apt-get install -y hub

    - name: Upload Release Assets
      run: |
        set -x
        cmd="hub release create"
        for asset in build/*; do
          cmd="$cmd -a $asset"
        done
        cmd="$cmd -d -m \"${{ env.TAG_NAME }}\" \"${{ env.TAG_NAME }}\""
        eval $cmd
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload package as artifact
      uses: actions/upload-artifact@v2
      with:
        name: myapp-package
        path: build/*